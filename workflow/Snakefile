
##### global workflow dependencies #####
# conda: "envs/global.yaml"

##### libraries #####
import os
import sys
import pandas as pd
import yaml
from snakemake.utils import min_version

##### set minimum snakemake version #####
min_version("8.25.3")

##### setup report #####
report: os.path.join("report", "workflow.rst")

##### utility functions #####
# UNUSED

##### load configs #####
configfile: os.path.join("config","config.yaml")

# load configs for all workflows and datasets
config_wf = dict()

for ds in config["workflows"]:
    for wf in config["workflows"][ds]:
        with open(config["workflows"][ds][wf], 'r') as stream:
            try:
                config_wf[ds+'_'+wf]=yaml.safe_load(stream)
            except yaml.YAMLError as exc:
                print(exc)
    

##### load rules (one per dataset) #####
include: os.path.join("rules", "quickstart.smk")
include: os.path.join("rules", "digits.smk")
# include: os.path.join("rules", "ATACseq.smk")

#### Target Rule ####
rule all:
    input:
        #### QUICKSTART ####
        rules.quickstart_enrichment_analysis_all.input,
        #### digits Analysis ####
        rules.digits_unsupervised_analysis_all.input,
        #### ATACseq Analysis Recipe ####
        # rules.ATACseq_ngs_fetch_all.input,
        # rules.ATACseq_atacseq_pipeline_all.input,
        # rules.ATACseq_genome_tracks_all.input,
        # rules.ATACseq_spilterlize_integrate_all.input,
        # rules.ATACseq_unsupervised_analysis_all.input,
        # rules.ATACseq_dea_limma_all.input,
        # rules.ATACseq_enrichment_analysis_all.input,
    # important for module usage
    default_target: True
    params:
    threads: 1
    resources:
        mem_mb=8000,
    log:
        os.path.join("logs","rules","all.log")
